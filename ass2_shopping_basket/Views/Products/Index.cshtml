@*@model IEnumerable<ass2_shopping_basket.Models.Product>

    @{
        ViewBag.Title = "Index";
    }

    <h2>Index</h2>

    <p>
        @Html.ActionLink("Create New", "Create")

        <!--lab4 Adding the Filter to the Products Index Page-->
        @using (Html.BeginForm("Index", "Products", FormMethod.Get))
        {
            <label>Filter by category:</label> @Html.DropDownList("Category", "All") <input type="submit" value="Filter" />
        <input type="hidden" name="Search" id="Search" value="@ViewBag.Search" />
    }
    </p>
    <table class="table">
        <tr>
            <!--for "view all our products" display-->
            <th>
                @Html.DisplayNameFor(model => model.Category.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th></th>
        </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Category.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
                @Html.ActionLink("Details", "Details", new { id=item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.ID })
            </td>
        </tr>
    }

    </table>*@

@model ass2_shopping_basket.ViewModels.ProductIndexViewModel
@using PagedList.Mvc

@{
    //ViewBag.Title = "Index";
    ViewBag.Title = "Products"; }
<br />
<br />
<br />
<h2>Index</h2>
<p>

    @*lab5*@
    @(String.IsNullOrWhiteSpace(Model.Search) ? "Showing all" : "You search for " + Model.Search + " found")
    @Model.Products.TotalItemCount products
    @*<br />*@

    @*lab7c*@
    @if (Request.IsAuthenticated && User.IsInRole("Admin"))
    {


        @Html.ActionLink("Create New", "Create")
    }
        @*(Html.BeginForm("Index", "Products", FormMethod.Get))*@
        @using (Html.BeginRouteForm("ProductsIndex", FormMethod.Get))
        {
            <label>Filter by category:</label>
            @*@Html.DropDownList("Category", "All")*@
            @Html.DropDownListFor(vm => vm.Category, Model.CatFilterItems, "All");

            //lab5
            <label>Sort By:</label>
            @Html.DropDownListFor(vm => vm.SortBy, new SelectList(Model.Sorts, "Value", "Key"), "Default")

            <input type="submit" value="Filter" />
            @*<input type="hidden" name="Search" id="Search" value="@ViewBag.Search" />*@
            <input type="hidden" name="Search" id="Search" value="@Model.Search" />
        }
    </p>
<table class="table">
    <tr>
    @*lab6c-for images heading*@
    <th></th>

        <th>
            @Html.DisplayNameFor(model => model.Category)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Products.First().Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Products.First().Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Products.First().Price)
        </th>
        <th></th>
    </tr> @foreach (var item in Model.Products)
    {
<tr>
    @*lab6c-for images *@
    <td >
        @if (item.ProductImageMappings != null && item.ProductImageMappings.Any())
        {
            <a href="@Url.Action("Details", new {id= item.ID})">
                <img src="@(Url.Content(Constants.ProductImagePath) + item.ProductImageMappings.OrderBy(pim=>pim.ImageNumber).ElementAt(0).ProductImage.FileName)" height="150" width="150"/>
            </a>
        }
    </td>


    <td>
        @Html.DisplayFor(modelItem => item.Category.Name)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Name)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Description)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Price)
    </td>
    <td>
        @*@Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
        @Html.ActionLink("Details", "Details", new { id = item.ID }) |
        @Html.ActionLink("Delete", "Delete", new { id = item.ID })*@

        @*lab7c*@
        @if (Request.IsAuthenticated && User.IsInRole("Admin"))
        {
            @Html.ActionLink("Edit", "Edit", new { id = item.ID })
            @Html.Raw(" | ") 
            @Html.ActionLink("Delete", "Delete", new { id = item.ID })
            @*@Html.Raw(" | ") @Html.ActionLink("Details", "Details", new { id = item.ID })*@
        }
    </td>
</tr>
    }
</table>

@*lab5*@
<div>
    Page @(Model.Products.PageCount < Model.Products.PageNumber ? 0 :
   Model.Products.PageNumber) of @Model.Products.PageCount
@Html.PagedListPager(Model.Products, page => Url.Action("Index", new
{
category = @Model.Category,
Search = @Model.Search,
sortBy = @Model.SortBy,
page
}))
</div>
